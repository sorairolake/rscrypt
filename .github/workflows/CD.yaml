name: CD

on:
  push:
    branches:
      - develop
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-musleabihf
          - x86_64-unknown-linux-musl
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - aarch64-pc-windows-msvc
          - x86_64-pc-windows-msvc
        include:
          - target: aarch64-unknown-linux-musl
            os: ubuntu-22.04
            use-cross: true
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-22.04
            use-cross: true
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-22.04
            use-cross: true
          - target: x86_64-unknown-linux-musl
            os: ubuntu-22.04
            use-cross: true
          - target: aarch64-apple-darwin
            os: macos-12
          - target: x86_64-apple-darwin
            os: macos-12
          - target: aarch64-pc-windows-msvc
            os: windows-2022
          - target: x86_64-pc-windows-msvc
            os: windows-2022
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: 1.64.0 # MSRV
        target: ${{ matrix.target }}
        override: true
        profile: minimal
    - name: Cache build artifacts
      uses: Swatinem/rust-cache@v2.2.1
      with:
        key: ${{ matrix.target }}
    - name: Setup Ruby
      if: matrix.os != 'windows-2022' && !matrix.use-cross
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2
    - name: Install Asciidoctor
      if: matrix.os != 'windows-2022' && !matrix.use-cross
      run: |
        gem install asciidoctor
        asciidoctor -V
    - name: Build a package
      uses: actions-rs/cargo@v1.0.3
      with:
        command: build
        args: --release --target ${{ matrix.target }}
        use-cross: ${{ matrix.use-cross }}
    - name: Get version
      id: get_version
      uses: battila7/get-version-action@v2.3.0
    - name: Create a package
      shell: bash
      run: |
        if [ "${{ matrix.os }}" != "windows-2022" ] ; then
          bin="target/${{ matrix.target }}/release/rscrypt"
        else
          bin="target/${{ matrix.target }}/release/rscrypt.exe"
        fi
        package="rscrypt-${{ steps.get_version.outputs.version }}-${{ matrix.target }}"

        mkdir -p "${package}"/doc
        cp README.md COPYING "${bin}" "${package}"
        cp {AUTHORS,BUILD,CHANGELOG,CONTRIBUTING}.adoc "${package}"/doc
        if [ "${{ matrix.os }}" != "windows-2022" ] ; then
          mkdir -p "${package}"/man
          cp "$(find ./target -path '*/scryptenc-cli-*/out' -type d)"/* "${package}"/man
        fi

        if [ "${{ matrix.os }}" != "windows-2022" ] ; then
          ZSTD_CLEVEL=19 tar -cavf "${package}.tar.zst" "${package}"
        else
          7z a -bb "${package}.7z" "${package}"
        fi
    - name: Release
      uses: softprops/action-gh-release@v0.1.15
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: 'rscrypt-*'
        name: "Release version ${{ steps.get_version.outputs.version-without-v }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
